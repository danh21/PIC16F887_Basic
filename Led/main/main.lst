CCS PCM C Compiler, Version 5.015, 5967               19-Sep-23 21:57

               Filename:   D:\cd\PIC_16F887A\Project\PIC C\timer_blink\main\main.lst

               ROM used:   570 words (7%)
                           Largest free fragment is 2048
               RAM used:   26 (7%) at main() level
                           44 (12%) worst case
               Stack used: 2 locations (1 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  01
0001:  MOVWF  0A
0002:  GOTO   17F
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.0
001A:  GOTO   01D
001B:  BTFSC  0C.0
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   031
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
*
0040:  MOVF   39,W
0041:  BTFSC  03.2
0042:  GOTO   0B0
0043:  MOVWF  41
0044:  MOVF   3D,W
0045:  BTFSC  03.2
0046:  GOTO   0B0
0047:  ADDWF  41,F
0048:  BTFSC  03.0
0049:  GOTO   051
004A:  MOVLW  7F
004B:  SUBWF  41,F
004C:  BTFSS  03.0
004D:  GOTO   0B0
004E:  BTFSC  03.2
004F:  GOTO   0B0
0050:  GOTO   055
0051:  MOVLW  81
0052:  ADDWF  41,F
0053:  BTFSC  03.0
0054:  GOTO   0B0
0055:  MOVF   41,W
0056:  MOVWF  77
0057:  CLRF   78
0058:  CLRF   79
0059:  CLRF   7A
005A:  MOVF   3A,W
005B:  MOVWF  45
005C:  BSF    45.7
005D:  MOVF   3B,W
005E:  MOVWF  44
005F:  MOVF   3C,W
0060:  MOVWF  43
0061:  MOVLW  18
0062:  MOVWF  41
0063:  CLRF   42
0064:  BTFSS  43.0
0065:  GOTO   07E
0066:  MOVF   40,W
0067:  ADDWF  7A,F
0068:  BTFSS  03.0
0069:  GOTO   070
006A:  INCF   79,F
006B:  BTFSS  03.2
006C:  GOTO   070
006D:  INCF   78,F
006E:  BTFSC  03.2
006F:  BSF    42.7
0070:  MOVF   3F,W
0071:  ADDWF  79,F
0072:  BTFSS  03.0
0073:  GOTO   077
0074:  INCF   78,F
0075:  BTFSC  03.2
0076:  BSF    42.7
0077:  MOVF   3E,W
0078:  MOVWF  3B
0079:  BSF    3B.7
007A:  MOVF   3B,W
007B:  ADDWF  78,F
007C:  BTFSC  03.0
007D:  BSF    42.7
007E:  RLF    42,F
007F:  RRF    78,F
0080:  RRF    79,F
0081:  RRF    7A,F
0082:  RRF    45,F
0083:  RRF    44,F
0084:  RRF    43,F
0085:  BCF    03.0
0086:  DECFSZ 41,F
0087:  GOTO   063
0088:  MOVLW  01
0089:  ADDWF  77,F
008A:  BTFSC  03.0
008B:  GOTO   0B0
008C:  BTFSC  78.7
008D:  GOTO   095
008E:  RLF    45,F
008F:  RLF    7A,F
0090:  RLF    79,F
0091:  RLF    78,F
0092:  DECF   77,F
0093:  BTFSC  03.2
0094:  GOTO   0B0
0095:  BTFSS  45.7
0096:  GOTO   0A6
0097:  INCF   7A,F
0098:  BTFSS  03.2
0099:  GOTO   0A6
009A:  INCF   79,F
009B:  BTFSS  03.2
009C:  GOTO   0A6
009D:  INCF   78,F
009E:  BTFSS  03.2
009F:  GOTO   0A6
00A0:  RRF    78,F
00A1:  RRF    79,F
00A2:  RRF    7A,F
00A3:  INCF   77,F
00A4:  BTFSC  03.2
00A5:  GOTO   0B0
00A6:  MOVF   3A,W
00A7:  MOVWF  42
00A8:  MOVF   3E,W
00A9:  XORWF  42,F
00AA:  BTFSS  42.7
00AB:  GOTO   0AE
00AC:  BSF    78.7
00AD:  GOTO   0B4
00AE:  BCF    78.7
00AF:  GOTO   0B4
00B0:  CLRF   77
00B1:  CLRF   78
00B2:  CLRF   79
00B3:  CLRF   7A
00B4:  RETURN
00B5:  MOVF   39,W
00B6:  BTFSC  03.2
00B7:  GOTO   17A
00B8:  MOVWF  45
00B9:  MOVF   3D,W
00BA:  BTFSC  03.2
00BB:  GOTO   17A
00BC:  SUBWF  45,F
00BD:  BTFSS  03.0
00BE:  GOTO   0C4
00BF:  MOVLW  7F
00C0:  ADDWF  45,F
00C1:  BTFSC  03.0
00C2:  GOTO   17A
00C3:  GOTO   0CA
00C4:  MOVLW  81
00C5:  SUBWF  45,F
00C6:  BTFSS  03.0
00C7:  GOTO   17A
00C8:  BTFSC  03.2
00C9:  GOTO   17A
00CA:  MOVF   45,W
00CB:  MOVWF  77
00CC:  CLRF   78
00CD:  CLRF   79
00CE:  CLRF   7A
00CF:  CLRF   44
00D0:  MOVF   3A,W
00D1:  MOVWF  43
00D2:  BSF    43.7
00D3:  MOVF   3B,W
00D4:  MOVWF  42
00D5:  MOVF   3C,W
00D6:  MOVWF  41
00D7:  MOVLW  19
00D8:  MOVWF  45
00D9:  MOVF   40,W
00DA:  SUBWF  41,F
00DB:  BTFSC  03.0
00DC:  GOTO   0ED
00DD:  MOVLW  01
00DE:  SUBWF  42,F
00DF:  BTFSC  03.0
00E0:  GOTO   0ED
00E1:  SUBWF  43,F
00E2:  BTFSC  03.0
00E3:  GOTO   0ED
00E4:  SUBWF  44,F
00E5:  BTFSC  03.0
00E6:  GOTO   0ED
00E7:  INCF   44,F
00E8:  INCF   43,F
00E9:  INCF   42,F
00EA:  MOVF   40,W
00EB:  ADDWF  41,F
00EC:  GOTO   11F
00ED:  MOVF   3F,W
00EE:  SUBWF  42,F
00EF:  BTFSC  03.0
00F0:  GOTO   108
00F1:  MOVLW  01
00F2:  SUBWF  43,F
00F3:  BTFSC  03.0
00F4:  GOTO   108
00F5:  SUBWF  44,F
00F6:  BTFSC  03.0
00F7:  GOTO   108
00F8:  INCF   44,F
00F9:  INCF   43,F
00FA:  MOVF   3F,W
00FB:  ADDWF  42,F
00FC:  MOVF   40,W
00FD:  ADDWF  41,F
00FE:  BTFSS  03.0
00FF:  GOTO   11F
0100:  INCF   42,F
0101:  BTFSS  03.2
0102:  GOTO   11F
0103:  INCF   43,F
0104:  BTFSS  03.2
0105:  GOTO   11F
0106:  INCF   44,F
0107:  GOTO   11F
0108:  MOVF   3E,W
0109:  IORLW  80
010A:  SUBWF  43,F
010B:  BTFSC  03.0
010C:  GOTO   11E
010D:  MOVLW  01
010E:  SUBWF  44,F
010F:  BTFSC  03.0
0110:  GOTO   11E
0111:  INCF   44,F
0112:  MOVF   3E,W
0113:  IORLW  80
0114:  ADDWF  43,F
0115:  MOVF   3F,W
0116:  ADDWF  42,F
0117:  BTFSS  03.0
0118:  GOTO   0FC
0119:  INCF   43,F
011A:  BTFSS  03.2
011B:  GOTO   0FC
011C:  INCF   44,F
011D:  GOTO   0FC
011E:  BSF    7A.0
011F:  DECFSZ 45,F
0120:  GOTO   122
0121:  GOTO   12D
0122:  BCF    03.0
0123:  RLF    41,F
0124:  RLF    42,F
0125:  RLF    43,F
0126:  RLF    44,F
0127:  BCF    03.0
0128:  RLF    7A,F
0129:  RLF    79,F
012A:  RLF    78,F
012B:  RLF    46,F
012C:  GOTO   0D9
012D:  BTFSS  46.0
012E:  GOTO   135
012F:  BCF    03.0
0130:  RRF    78,F
0131:  RRF    79,F
0132:  RRF    7A,F
0133:  RRF    46,F
0134:  GOTO   138
0135:  DECF   77,F
0136:  BTFSC  03.2
0137:  GOTO   17A
0138:  BTFSC  46.7
0139:  GOTO   161
013A:  BCF    03.0
013B:  RLF    41,F
013C:  RLF    42,F
013D:  RLF    43,F
013E:  RLF    44,F
013F:  MOVF   40,W
0140:  SUBWF  41,F
0141:  BTFSC  03.0
0142:  GOTO   14D
0143:  MOVLW  01
0144:  SUBWF  42,F
0145:  BTFSC  03.0
0146:  GOTO   14D
0147:  SUBWF  43,F
0148:  BTFSC  03.0
0149:  GOTO   14D
014A:  SUBWF  44,F
014B:  BTFSS  03.0
014C:  GOTO   170
014D:  MOVF   3F,W
014E:  SUBWF  42,F
014F:  BTFSC  03.0
0150:  GOTO   158
0151:  MOVLW  01
0152:  SUBWF  43,F
0153:  BTFSC  03.0
0154:  GOTO   158
0155:  SUBWF  44,F
0156:  BTFSS  03.0
0157:  GOTO   170
0158:  MOVF   3E,W
0159:  IORLW  80
015A:  SUBWF  43,F
015B:  BTFSC  03.0
015C:  GOTO   161
015D:  MOVLW  01
015E:  SUBWF  44,F
015F:  BTFSS  03.0
0160:  GOTO   170
0161:  INCF   7A,F
0162:  BTFSS  03.2
0163:  GOTO   170
0164:  INCF   79,F
0165:  BTFSS  03.2
0166:  GOTO   170
0167:  INCF   78,F
0168:  BTFSS  03.2
0169:  GOTO   170
016A:  INCF   77,F
016B:  BTFSC  03.2
016C:  GOTO   17A
016D:  RRF    78,F
016E:  RRF    79,F
016F:  RRF    7A,F
0170:  MOVF   3A,W
0171:  MOVWF  45
0172:  MOVF   3E,W
0173:  XORWF  45,F
0174:  BTFSS  45.7
0175:  GOTO   178
0176:  BSF    78.7
0177:  GOTO   17E
0178:  BCF    78.7
0179:  GOTO   17E
017A:  CLRF   77
017B:  CLRF   78
017C:  CLRF   79
017D:  CLRF   7A
017E:  RETURN
*
0203:  MOVLW  8E
0204:  MOVWF  77
0205:  MOVF   35,W
0206:  SUBWF  77,F
0207:  MOVF   36,W
0208:  MOVWF  79
0209:  MOVF   37,W
020A:  MOVWF  78
020B:  BSF    79.7
020C:  MOVF   77,F
020D:  BTFSC  03.2
020E:  GOTO   21A
020F:  BCF    03.0
0210:  MOVF   79,F
0211:  BTFSS  03.2
0212:  GOTO   216
0213:  MOVF   78,F
0214:  BTFSC  03.2
0215:  GOTO   21A
0216:  RRF    79,F
0217:  RRF    78,F
0218:  DECFSZ 77,F
0219:  GOTO   20F
021A:  BTFSS  36.7
021B:  GOTO   221
021C:  COMF   78,F
021D:  COMF   79,F
021E:  INCF   78,F
021F:  BTFSC  03.2
0220:  INCF   79,F
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20000000) 
....................  
....................  
....................  
.................... /* CONFIG */ 
.................... #define LED PIN_B0 
....................  
.................... float period = 1;                // s 
.................... float timer_div_by = 2;          // T1_DIV_BY_2 mode 
....................  
....................  
....................  
.................... float thresOverflow = timer_div_by * 104857.6 / 8;             // help on "setup_timer_1" 
....................  
.................... int count = 0;  
.................... int countOverflow = (period / 2) * 1000000 / thresOverflow;    // us 
....................  
....................  
....................  
....................  
.................... #INT_TIMER1 
.................... void int_blink(void)  
.................... { 
....................    count++; 
*
0031:  INCF   33,F
....................    if (count == countOverflow) { 
0032:  MOVF   34,W
0033:  SUBWF  33,W
0034:  BTFSS  03.2
0035:  GOTO   03C
....................       count = 0; 
0036:  CLRF   33
....................       output_toggle(LED); 
0037:  BSF    03.5
0038:  BCF    06.0
0039:  MOVLW  01
003A:  BCF    03.5
003B:  XORWF  06,F
....................    } 
003C:  BCF    0C.0
003D:  BCF    0A.3
003E:  BCF    0A.4
003F:  GOTO   01D
.................... } 
....................  
....................  
....................  
.................... void main()  
*
017F:  MOVF   03,W
0180:  ANDLW  1F
0181:  MOVWF  03
0182:  CLRF   2A
0183:  CLRF   29
0184:  CLRF   28
0185:  MOVLW  7F
0186:  MOVWF  27
0187:  CLRF   2E
0188:  CLRF   2D
0189:  CLRF   2C
018A:  MOVLW  80
018B:  MOVWF  2B
018C:  MOVF   2E,W
018D:  MOVWF  3C
018E:  MOVF   2D,W
018F:  MOVWF  3B
0190:  MOVF   2C,W
0191:  MOVWF  3A
0192:  MOVF   2B,W
0193:  MOVWF  39
0194:  MOVLW  CD
0195:  MOVWF  40
0196:  MOVLW  CC
0197:  MOVWF  3F
0198:  MOVLW  4C
0199:  MOVWF  3E
019A:  MOVLW  8F
019B:  MOVWF  3D
019C:  CALL   040
019D:  MOVF   7A,W
019E:  MOVWF  38
019F:  MOVF   79,W
01A0:  MOVWF  37
01A1:  MOVF   78,W
01A2:  MOVWF  36
01A3:  MOVF   77,W
01A4:  MOVWF  35
01A5:  MOVF   38,W
01A6:  MOVWF  3C
01A7:  MOVF   37,W
01A8:  MOVWF  3B
01A9:  MOVF   36,W
01AA:  MOVWF  3A
01AB:  MOVF   35,W
01AC:  MOVWF  39
01AD:  CLRF   40
01AE:  CLRF   3F
01AF:  CLRF   3E
01B0:  MOVLW  82
01B1:  MOVWF  3D
01B2:  CALL   0B5
01B3:  MOVF   7A,W
01B4:  MOVWF  32
01B5:  MOVF   79,W
01B6:  MOVWF  31
01B7:  MOVF   78,W
01B8:  MOVWF  30
01B9:  MOVF   77,W
01BA:  MOVWF  2F
01BB:  CLRF   33
01BC:  MOVF   2A,W
01BD:  MOVWF  3C
01BE:  MOVF   29,W
01BF:  MOVWF  3B
01C0:  MOVF   28,W
01C1:  MOVWF  3A
01C2:  MOVF   27,W
01C3:  MOVWF  39
01C4:  CLRF   40
01C5:  CLRF   3F
01C6:  CLRF   3E
01C7:  MOVLW  80
01C8:  MOVWF  3D
01C9:  CALL   0B5
01CA:  MOVF   7A,W
01CB:  MOVWF  38
01CC:  MOVF   79,W
01CD:  MOVWF  37
01CE:  MOVF   78,W
01CF:  MOVWF  36
01D0:  MOVF   77,W
01D1:  MOVWF  35
01D2:  MOVF   38,W
01D3:  MOVWF  3C
01D4:  MOVF   37,W
01D5:  MOVWF  3B
01D6:  MOVF   36,W
01D7:  MOVWF  3A
01D8:  MOVF   35,W
01D9:  MOVWF  39
01DA:  CLRF   40
01DB:  MOVLW  24
01DC:  MOVWF  3F
01DD:  MOVLW  74
01DE:  MOVWF  3E
01DF:  MOVLW  92
01E0:  MOVWF  3D
01E1:  CALL   040
01E2:  MOVF   7A,W
01E3:  MOVWF  38
01E4:  MOVF   79,W
01E5:  MOVWF  37
01E6:  MOVF   78,W
01E7:  MOVWF  36
01E8:  MOVF   77,W
01E9:  MOVWF  35
01EA:  MOVF   38,W
01EB:  MOVWF  3C
01EC:  MOVF   37,W
01ED:  MOVWF  3B
01EE:  MOVF   36,W
01EF:  MOVWF  3A
01F0:  MOVF   35,W
01F1:  MOVWF  39
01F2:  MOVF   32,W
01F3:  MOVWF  40
01F4:  MOVF   31,W
01F5:  MOVWF  3F
01F6:  MOVF   30,W
01F7:  MOVWF  3E
01F8:  MOVF   2F,W
01F9:  MOVWF  3D
01FA:  CALL   0B5
01FB:  MOVF   7A,W
01FC:  MOVWF  38
01FD:  MOVF   79,W
01FE:  MOVWF  37
01FF:  MOVF   78,W
0200:  MOVWF  36
0201:  MOVF   77,W
0202:  MOVWF  35
*
0221:  MOVF   78,W
0222:  MOVWF  34
0223:  BSF    03.5
0224:  BSF    1F.0
0225:  BSF    1F.1
0226:  BSF    1F.2
0227:  BCF    1F.3
0228:  MOVLW  07
0229:  MOVWF  1C
022A:  BCF    03.7
.................... { 
....................    output_low(LED);   
022B:  BCF    06.0
022C:  BCF    03.5
022D:  BCF    06.0
....................     
....................    setup_timer_1(T1_INTERNAL | T1_DIV_BY_2);    // init timer 
022E:  MOVLW  95
022F:  MOVWF  10
....................    set_timer1(0);                               // Set the count value  
0230:  CLRF   0E
0231:  CLRF   0F
0232:  CLRF   0E
....................     
....................    enable_interrupts(INT_TIMER1); 
0233:  BSF    03.5
0234:  BSF    0C.0
....................    enable_interrupts(GLOBAL);                   // allow any of the specified interrupts previously enabled to become active 
0235:  MOVLW  C0
0236:  BCF    03.5
0237:  IORWF  0B,F
....................           
....................    while (TRUE); 
0238:  GOTO   238
.................... } 
0239:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
