CCS PCM C Compiler, Version 5.015, 5967               20-Sep-23 21:08

               Filename:   D:\cd\PIC_16F887A\Project\PIC C\PWM_ctrl_motor\main\main.lst

               ROM used:   88 words (1%)
                           Largest free fragment is 2048
               RAM used:   7 (2%) at main() level
                           8 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   033
0003:  NOP
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20000000) 
*
001F:  MOVLW  22
0020:  MOVWF  04
0021:  BCF    03.7
0022:  MOVF   00,W
0023:  BTFSC  03.2
0024:  GOTO   032
0025:  MOVLW  06
0026:  MOVWF  78
0027:  CLRF   77
0028:  DECFSZ 77,F
0029:  GOTO   028
002A:  DECFSZ 78,F
002B:  GOTO   027
002C:  MOVLW  7B
002D:  MOVWF  77
002E:  DECFSZ 77,F
002F:  GOTO   02E
0030:  DECFSZ 00,F
0031:  GOTO   025
0032:  RETURN
....................  
....................  
....................  
.................... #define motorRotateForward    {set_pwm1_duty(100); set_pwm2_duty(0);} 
.................... #define motorRotateBackward   {set_pwm1_duty(0); set_pwm2_duty(100);} 
....................  
.................... void setup(void) 
.................... { 
....................    setup_timer_2(T2_DIV_BY_16, 100, 1); 
*
0004:  MOVLW  00
0005:  MOVWF  78
0006:  IORLW  06
0007:  MOVWF  12
0008:  MOVLW  64
0009:  BSF    03.5
000A:  MOVWF  12
....................    setup_ccp1(CCP_PWM);                   // Enable Pulse Width Modulator 
000B:  BCF    03.5
000C:  BCF    20.2
000D:  MOVF   20,W
000E:  BSF    03.5
000F:  MOVWF  07
0010:  BCF    03.5
0011:  BCF    07.2
0012:  MOVLW  0C
0013:  MOVWF  17
....................    setup_ccp2(CCP_PWM); 
0014:  BCF    20.1
0015:  MOVF   20,W
0016:  BSF    03.5
0017:  MOVWF  07
0018:  BCF    03.5
0019:  BCF    07.1
001A:  MOVLW  0C
001B:  MOVWF  1D
001C:  BCF    0A.3
001D:  BCF    0A.4
001E:  GOTO   042 (RETURN)
.................... } 
....................  
....................  
.................... void main() { 
*
0033:  MOVF   03,W
0034:  ANDLW  1F
0035:  MOVWF  03
0036:  MOVLW  FF
0037:  MOVWF  20
0038:  BSF    03.5
0039:  BSF    1F.0
003A:  BSF    1F.1
003B:  BSF    1F.2
003C:  BCF    1F.3
003D:  MOVLW  07
003E:  MOVWF  1C
003F:  BCF    03.7
....................    setup();  
0040:  BCF    03.5
0041:  GOTO   004
....................       
....................    while(TRUE) { 
....................       motorRotateForward; 
0042:  MOVLW  64
0043:  MOVWF  15
0044:  CLRF   1B
....................       delay_ms(3000); 
0045:  MOVLW  0C
0046:  MOVWF  21
0047:  MOVLW  FA
0048:  MOVWF  22
0049:  CALL   01F
004A:  DECFSZ 21,F
004B:  GOTO   047
....................       motorRotateBackward; 
004C:  CLRF   15
004D:  MOVLW  64
004E:  MOVWF  1B
....................       delay_ms(3000); 
004F:  MOVLW  0C
0050:  MOVWF  21
0051:  MOVLW  FA
0052:  MOVWF  22
0053:  CALL   01F
0054:  DECFSZ 21,F
0055:  GOTO   051
0056:  GOTO   042
....................    } 
.................... } 
0057:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
