CCS PCM C Compiler, Version 5.015, 5967               16-Sep-23 17:41

               Filename:   D:\cd\PIC_16F887A\Project\PIC C\keypad\main\main.lst

               ROM used:   390 words (5%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           12 (3%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  01
0001:  MOVWF  0A
0002:  GOTO   167
0003:  NOP
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
0004:  BCF    0A.0
0005:  BCF    0A.1
0006:  BCF    0A.2
0007:  ADDWF  02,F
0008:  RETLW  37
0009:  RETLW  38
000A:  RETLW  39
000B:  RETLW  2F
000C:  RETLW  34
000D:  RETLW  35
000E:  RETLW  36
000F:  RETLW  78
0010:  RETLW  31
0011:  RETLW  32
0012:  RETLW  33
0013:  RETLW  2D
0014:  RETLW  20
0015:  RETLW  30
0016:  RETLW  3D
0017:  RETLW  2B
0018:  DATA CB,32
0019:  DATA 79,1D
001A:  DATA A0,12
001B:  DATA E3,06
001C:  DATA 0A,00
*
00EA:  MOVF   0B,W
00EB:  MOVWF  24
00EC:  BCF    0B.7
00ED:  BSF    03.5
00EE:  BSF    03.6
00EF:  BSF    0C.7
00F0:  BSF    0C.0
00F1:  NOP
00F2:  NOP
00F3:  BCF    03.5
00F4:  BCF    03.6
00F5:  BTFSC  24.7
00F6:  BSF    0B.7
00F7:  BTFSC  03.0
00F8:  GOTO   122
00F9:  BSF    03.6
00FA:  MOVF   0C,W
00FB:  ANDLW  7F
00FC:  BCF    03.6
00FD:  MOVWF  24
00FE:  BSF    03.6
00FF:  MOVF   0D,W
0100:  BCF    03.6
0101:  MOVWF  25
0102:  BSF    03.6
0103:  MOVF   0F,W
0104:  BCF    03.6
0105:  MOVWF  26
0106:  MOVF   24,W
0107:  BTFSS  0C.4
0108:  GOTO   107
0109:  MOVWF  19
010A:  MOVF   25,W
010B:  BSF    03.6
010C:  MOVWF  0D
010D:  BCF    03.6
010E:  MOVF   26,W
010F:  BSF    03.6
0110:  MOVWF  0F
0111:  BCF    03.6
0112:  MOVF   0B,W
0113:  MOVWF  27
0114:  BCF    0B.7
0115:  BSF    03.5
0116:  BSF    03.6
0117:  BSF    0C.7
0118:  BSF    0C.0
0119:  NOP
011A:  NOP
011B:  BCF    03.5
011C:  BCF    03.6
011D:  BTFSC  27.7
011E:  BSF    0B.7
011F:  DECFSZ 23,F
0120:  GOTO   122
0121:  GOTO   142
0122:  BSF    03.6
0123:  RLF    0C,W
0124:  RLF    0E,W
0125:  ANDLW  7F
0126:  BCF    03.6
0127:  MOVWF  24
0128:  BSF    03.6
0129:  MOVF   0D,W
012A:  BCF    03.6
012B:  MOVWF  25
012C:  BSF    03.6
012D:  MOVF   0F,W
012E:  BCF    03.6
012F:  MOVWF  26
0130:  MOVF   24,W
0131:  BTFSS  0C.4
0132:  GOTO   131
0133:  MOVWF  19
0134:  MOVF   25,W
0135:  BSF    03.6
0136:  MOVWF  0D
0137:  BCF    03.6
0138:  MOVF   26,W
0139:  BSF    03.6
013A:  MOVWF  0F
013B:  INCF   0D,F
013C:  BTFSC  03.2
013D:  INCF   0F,F
013E:  BCF    03.0
013F:  BCF    03.6
0140:  DECFSZ 23,F
0141:  GOTO   0EA
....................  
.................... #list 
....................  
.................... #device ADC = 16 
....................  
.................... #FUSES HS                       // thach anh ngoai toc do cao 
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal = 20000000) 
*
0151:  MOVLW  22
0152:  MOVWF  04
0153:  BCF    03.7
0154:  MOVF   00,W
0155:  BTFSC  03.2
0156:  GOTO   164
0157:  MOVLW  06
0158:  MOVWF  78
0159:  CLRF   77
015A:  DECFSZ 77,F
015B:  GOTO   15A
015C:  DECFSZ 78,F
015D:  GOTO   159
015E:  MOVLW  7B
015F:  MOVWF  77
0160:  DECFSZ 77,F
0161:  GOTO   160
0162:  DECFSZ 00,F
0163:  GOTO   157
0164:  BCF    0A.3
0165:  BCF    0A.4
0166:  GOTO   184 (RETURN)
....................  
....................  
....................  
.................... #include "keypad.h" 
.................... #define row0 input(PIN_B7) 
.................... #define row1 input(PIN_B6) 
.................... #define row2 input(PIN_B5) 
.................... #define row3 input(PIN_B4) 
....................  
.................... #define col0(x) output_bit(PIN_B3, x) 
.................... #define col1(x) output_bit(PIN_B2, x) 
.................... #define col2(x) output_bit(PIN_B1, x) 
.................... #define col3(x) output_bit(PIN_B0, x) 
....................  
....................  
....................  
.................... #define keypad_numOfRows 4                      
.................... #define keypad_numOfCols 4     
....................  
.................... const char keys[keypad_numOfRows][keypad_numOfCols] = {    
....................    '7', '8', '9', '/', 
....................    '4', '5', '6', 'x', 
....................    '1', '2', '3', '-', 
....................    ' ', '0', '=', '+' 
.................... }; 
....................  
....................  
....................  
.................... signed char scan_keypad()  
*
001D:  MOVLW  FF
001E:  MOVWF  22
001F:  MOVWF  23
.................... { 
....................    char row = -1, col = -1; 
....................     
....................    col0(0); 
0020:  BCF    06.3
0021:  BSF    03.5
0022:  BCF    06.3
....................    if(row0 == 0)        {col = 0; row = 0;} 
0023:  BSF    06.7
0024:  BCF    03.5
0025:  BTFSC  06.7
0026:  GOTO   02A
0027:  CLRF   23
0028:  CLRF   22
0029:  GOTO   044
....................    else if(row1 == 0)   {col = 0; row = 1;} 
002A:  BSF    03.5
002B:  BSF    06.6
002C:  BCF    03.5
002D:  BTFSC  06.6
002E:  GOTO   033
002F:  CLRF   23
0030:  MOVLW  01
0031:  MOVWF  22
0032:  GOTO   044
....................    else if(row2 == 0)   {col = 0; row = 2;} 
0033:  BSF    03.5
0034:  BSF    06.5
0035:  BCF    03.5
0036:  BTFSC  06.5
0037:  GOTO   03C
0038:  CLRF   23
0039:  MOVLW  02
003A:  MOVWF  22
003B:  GOTO   044
....................    else if(row3 == 0)   {col = 0; row = 3;} 
003C:  BSF    03.5
003D:  BSF    06.4
003E:  BCF    03.5
003F:  BTFSC  06.4
0040:  GOTO   044
0041:  CLRF   23
0042:  MOVLW  03
0043:  MOVWF  22
....................    col0(1); 
0044:  BSF    06.3
0045:  BSF    03.5
0046:  BCF    06.3
....................     
....................    col1(0); 
0047:  BCF    03.5
0048:  BCF    06.2
0049:  BSF    03.5
004A:  BCF    06.2
....................    if(row0 == 0)        {col = 1; row = 0;}     
004B:  BSF    06.7
004C:  BCF    03.5
004D:  BTFSC  06.7
004E:  GOTO   053
004F:  MOVLW  01
0050:  MOVWF  23
0051:  CLRF   22
0052:  GOTO   06F
....................    else if(row1 == 0)   {col = 1; row = 1;} 
0053:  BSF    03.5
0054:  BSF    06.6
0055:  BCF    03.5
0056:  BTFSC  06.6
0057:  GOTO   05C
0058:  MOVLW  01
0059:  MOVWF  23
005A:  MOVWF  22
005B:  GOTO   06F
....................    else if(row2 == 0)   {col = 1; row = 2;} 
005C:  BSF    03.5
005D:  BSF    06.5
005E:  BCF    03.5
005F:  BTFSC  06.5
0060:  GOTO   066
0061:  MOVLW  01
0062:  MOVWF  23
0063:  MOVLW  02
0064:  MOVWF  22
0065:  GOTO   06F
....................    else if(row3 == 0)   {col = 1; row = 3;} 
0066:  BSF    03.5
0067:  BSF    06.4
0068:  BCF    03.5
0069:  BTFSC  06.4
006A:  GOTO   06F
006B:  MOVLW  01
006C:  MOVWF  23
006D:  MOVLW  03
006E:  MOVWF  22
....................    col1(1); 
006F:  BSF    06.2
0070:  BSF    03.5
0071:  BCF    06.2
....................     
....................    col2(0); 
0072:  BCF    03.5
0073:  BCF    06.1
0074:  BSF    03.5
0075:  BCF    06.1
....................    if(row0 == 0)        {col = 2; row = 0;}     
0076:  BSF    06.7
0077:  BCF    03.5
0078:  BTFSC  06.7
0079:  GOTO   07E
007A:  MOVLW  02
007B:  MOVWF  23
007C:  CLRF   22
007D:  GOTO   09A
....................    else if(row1 == 0)   {col = 2; row = 1;} 
007E:  BSF    03.5
007F:  BSF    06.6
0080:  BCF    03.5
0081:  BTFSC  06.6
0082:  GOTO   088
0083:  MOVLW  02
0084:  MOVWF  23
0085:  MOVLW  01
0086:  MOVWF  22
0087:  GOTO   09A
....................    else if(row2 == 0)   {col = 2; row = 2;} 
0088:  BSF    03.5
0089:  BSF    06.5
008A:  BCF    03.5
008B:  BTFSC  06.5
008C:  GOTO   091
008D:  MOVLW  02
008E:  MOVWF  23
008F:  MOVWF  22
0090:  GOTO   09A
....................    else if(row3 == 0)   {col = 2; row = 3;} 
0091:  BSF    03.5
0092:  BSF    06.4
0093:  BCF    03.5
0094:  BTFSC  06.4
0095:  GOTO   09A
0096:  MOVLW  02
0097:  MOVWF  23
0098:  MOVLW  03
0099:  MOVWF  22
....................    col2(1); 
009A:  BSF    06.1
009B:  BSF    03.5
009C:  BCF    06.1
....................     
....................    col3(0); 
009D:  BCF    03.5
009E:  BCF    06.0
009F:  BSF    03.5
00A0:  BCF    06.0
....................    if(row0 == 0)        {col = 3; row = 0;}     
00A1:  BSF    06.7
00A2:  BCF    03.5
00A3:  BTFSC  06.7
00A4:  GOTO   0A9
00A5:  MOVLW  03
00A6:  MOVWF  23
00A7:  CLRF   22
00A8:  GOTO   0C5
....................    else if(row1 == 0)   {col = 3; row = 1;} 
00A9:  BSF    03.5
00AA:  BSF    06.6
00AB:  BCF    03.5
00AC:  BTFSC  06.6
00AD:  GOTO   0B3
00AE:  MOVLW  03
00AF:  MOVWF  23
00B0:  MOVLW  01
00B1:  MOVWF  22
00B2:  GOTO   0C5
....................    else if(row2 == 0)   {col = 3; row = 2;} 
00B3:  BSF    03.5
00B4:  BSF    06.5
00B5:  BCF    03.5
00B6:  BTFSC  06.5
00B7:  GOTO   0BD
00B8:  MOVLW  03
00B9:  MOVWF  23
00BA:  MOVLW  02
00BB:  MOVWF  22
00BC:  GOTO   0C5
....................    else if(row3 == 0)   {col = 3; row = 3;} 
00BD:  BSF    03.5
00BE:  BSF    06.4
00BF:  BCF    03.5
00C0:  BTFSC  06.4
00C1:  GOTO   0C5
00C2:  MOVLW  03
00C3:  MOVWF  23
00C4:  MOVWF  22
....................    col3(1); 
00C5:  BSF    06.0
00C6:  BSF    03.5
00C7:  BCF    06.0
....................     
....................    if (col != -1) 
00C8:  BCF    03.5
00C9:  MOVF   23,W
00CA:  SUBLW  FF
00CB:  BTFSC  03.2
00CC:  GOTO   0D8
....................       return keys[row][col]; 
00CD:  RLF    22,W
00CE:  MOVWF  77
00CF:  RLF    77,F
00D0:  MOVLW  FC
00D1:  ANDWF  77,F
00D2:  MOVF   77,W
00D3:  ADDWF  23,W
00D4:  CALL   004
00D5:  MOVWF  78
00D6:  MOVWF  78
00D7:  GOTO   0DA
....................    return -1; 
00D8:  MOVLW  FF
00D9:  MOVWF  78
00DA:  BCF    0A.3
00DB:  BCF    0A.4
00DC:  GOTO   17C (RETURN)
.................... } 
....................  
....................  
.................... #use rs232(uart1, baud = 9600) 
....................  
.................... void print_key(char key) 
.................... { 
....................    if (key != -1)  
00DD:  MOVF   22,W
00DE:  SUBLW  FF
00DF:  BTFSC  03.2
00E0:  GOTO   14E
....................       printf("Key: %c\r\n", key); 
00E1:  MOVLW  18
00E2:  BSF    03.6
00E3:  MOVWF  0D
00E4:  MOVLW  00
00E5:  MOVWF  0F
00E6:  BCF    03.0
00E7:  MOVLW  05
00E8:  BCF    03.6
00E9:  MOVWF  23
*
0142:  MOVF   22,W
0143:  BTFSS  0C.4
0144:  GOTO   143
0145:  MOVWF  19
0146:  MOVLW  0D
0147:  BTFSS  0C.4
0148:  GOTO   147
0149:  MOVWF  19
014A:  MOVLW  0A
014B:  BTFSS  0C.4
014C:  GOTO   14B
014D:  MOVWF  19
014E:  BCF    0A.3
014F:  BCF    0A.4
0150:  GOTO   181 (RETURN)
.................... } 
....................  
....................  
.................... void main() 
*
0167:  MOVF   03,W
0168:  ANDLW  1F
0169:  MOVWF  03
016A:  MOVLW  81
016B:  BSF    03.5
016C:  MOVWF  19
016D:  MOVLW  A6
016E:  MOVWF  18
016F:  MOVLW  90
0170:  BCF    03.5
0171:  MOVWF  18
0172:  BSF    03.5
0173:  BSF    1F.0
0174:  BSF    1F.1
0175:  BSF    1F.2
0176:  BCF    1F.3
0177:  MOVLW  07
0178:  MOVWF  1C
0179:  BCF    03.7
.................... {   
....................    char key; 
....................  
....................    while (TRUE) 
....................    {   
....................       key = scan_keypad(); 
017A:  BCF    03.5
017B:  GOTO   01D
017C:  MOVF   78,W
017D:  MOVWF  21
....................       print_key(key); 
017E:  MOVF   21,W
017F:  MOVWF  22
0180:  GOTO   0DD
....................       delay_ms(200); 
0181:  MOVLW  C8
0182:  MOVWF  22
0183:  GOTO   151
0184:  GOTO   17B
....................    } 
.................... } 
0185:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
