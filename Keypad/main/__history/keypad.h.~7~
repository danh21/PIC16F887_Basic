#define rowA input(PIN_B7)
#define rowB input(PIN_B6)
#define rowC input(PIN_B5)
#define rowD_in input(PIN_B4)

#define rowA_out(x) output_bit(PIN_B7, x)
#define rowB_out(x) output_bit(PIN_B6, x)
#define rowC_out(x) output_bit(PIN_B5, x)
#define rowD_out(x) output_bit(PIN_B4, x)

#define col1 PIN_B3
#define col2 PIN_B2
#define col3 PIN_B1
#define col4 PIN_B0

/*char scan_col1()                   // Function for finding the row for column 1
{
   //rowA(1); rowB(1); rowC(1); rowD(1);
   col1(0); col2(0); col3(0); col4(0);

   if(rowA == 0)
      return '7';
   else if(rowB == 0)
      return '4';
   else if(rowC == 0)
      return('1');
   else if(rowD == 0)  
      return 'C'; 
}

char scan_col2()                   // Function for finding the row for column 1
{
   //rowA(1); rowB(1); rowC(1); rowD(1);
   col1(0); col2(0); col3(0); col4(0);

   if(rowA == 0)
      return '8';
   else if(rowB == 0)
      return '5';
   else if(rowC == 0)
      return('2');
   else if(rowD == 0)  
      return '0'; 
}

char scan_col3()                   // Function for finding the row for column 1
{
   //rowA(1); rowB(1); rowC(1); rowD(1);
   col1(0); col2(0); col3(0); col4(0);

   if(rowA == 0)
      return '9';
   else if(rowB == 0)
      return '6';
   else if(rowC == 0)
      return('3');
   else if(rowD == 0)  
      return '='; 
}

char scan_col4()                   // Function for finding the row for column 1
{
   //rowA(1); rowB(1); rowC(1); rowD(1);
   col1(0); col2(0); col3(0); col4(0);

   if(rowA == 0)
      return 253;
   else if(rowB == 0)
      return '*';
   else if(rowC == 0)
      return('-');
   else if(rowD == 0)  
      return '+'; 
}*/
