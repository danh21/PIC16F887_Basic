#define rowA input(PIN_B7)
#define rowB input(PIN_B6)
#define rowC input(PIN_B5)
#define rowD input(PIN_B4)

#define col1(x) output_bit(PIN_B3, x)
#define col2(x) output_bit(PIN_B2, x)
#define col3(x) output_bit(PIN_B1, x)
#define col4(x) output_bit(PIN_B0, x)

const char keys[16] = {'7','4','1','C','8','5','2','0','9','6','3','=','/','*','-','+'};

signed char scan_keypad() {
   signed char key_in = -1;
   
   col1(0);
   if(rowA == 0)
      key_in = 0;
   else if(rowB == 0)
      key_in = 1;
   else if(rowC == 0)
      key_in = 2;
   else if(rowD == 0)  
      key_in = 3; 
   col1(1);
   
   col2(0);
   if(rowA == 0)
      key_in = 4;
   else if(rowB == 0)
      key_in = 5;
   else if(rowC == 0)
      key_in = 6;
   else if(rowD == 0)  
      key_in = 7; 
   col2(1);
   
   col3(0);
   if(rowA == 0)
      key_in = 8;
   else if(rowB == 0)
      key_in = 9;
   else if(rowC == 0)
      key_in = 10;
   else if(rowD == 0)  
      key_in = 11; 
   col3(1);
   
   col4(0);
   if(rowA == 0)
      key_in = 12;
   else if(rowB == 0)
      key_in = 13;
   else if(rowC == 0)
      key_in = 14;
   else if(rowD == 0)  
      key_in = 15; 
   col4(1);
   
   if (key_in != -1)
      return keys[key_in];
   return -1;
}
