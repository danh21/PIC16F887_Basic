#define rowA input(PIN_B7)
#define rowB input(PIN_B6)
#define rowC input(PIN_B5)
#define rowD input(PIN_B4)

/*#define rowA_out(x) output_bit(PIN_B7, x)
#define rowB_out(x) output_bit(PIN_B6, x)
#define rowC_out(x) output_bit(PIN_B5, x)
#define rowD_out(x) output_bit(PIN_B4, x)*/

/*#define col1_in input(PIN_B3)
#define col2_in input(PIN_B2)
#define col3_in input(PIN_B1)
#define col4_in input(PIN_B0)*/

#define col1(x) output_bit(PIN_B3, x)
#define col2(x) output_bit(PIN_B2, x)
#define col3(x) output_bit(PIN_B1, x)
#define col4(x) output_bit(PIN_B0, x)

char scan_keypad() {
   col1(0);
   if(rowA == 0)
      return '7';
   else if(rowB == 0)
      return '4';
   else if(rowC == 0)
      return('1');
   else if(rowD == 0)  
      return 'C'; 
   col1(1);
   
   col2(0);
   if(rowA == 0)
      return '8';
   else if(rowB == 0)
      return '5';
   else if(rowC == 0)
      return('2');
   else if(rowD == 0)  
      return '0'; 
   col2(1);
   
   col3(0);
   if(rowA == 0)
      return '9';
   else if(rowB == 0)
      return '6';
   else if(rowC == 0)
      return('3');
   else if(rowD == 0)  
      return '='; 
   col3(1);
   
   col4(0);
   if(rowA == 0)
      return 253;
   else if(rowB == 0)
      return '*';
   else if(rowC == 0)
      return('-');
   else if(rowD == 0)  
      return '+'; 
   col4(1);
}


/*char scan_col1()                   // Function for finding the row for column 1
{
   rowA_out(1); rowB_out(1); rowC_out(1); rowD_out(1);
   col1_out(0); col2_out(0); col3_out(0); col4_out(0);

   if(rowA_in == 0)
      return '7';
   else if(rowB_in == 0)
      return '4';
   else if(rowC_in == 0)
      return('1');
   else if(rowD_in == 0)  
      return 'C'; 
}

char scan_col2()                   // Function for finding the row for column 1
{
   rowA_out(1); rowB_out(1); rowC_out(1); rowD_out(1);
   col1_out(0); col2_out(0); col3_out(0); col4_out(0);

   if(rowA_in == 0)
      return '8';
   else if(rowB_in == 0)
      return '5';
   else if(rowC_in == 0)
      return('2');
   else if(rowD_in == 0)  
      return '0'; 
}

char scan_col3()                   // Function for finding the row for column 1
{
   rowA_out(1); rowB_out(1); rowC_out(1); rowD_out(1);
   col1_out(0); col2_out(0); col3_out(0); col4_out(0);

   if(rowA_in == 0)
      return '9';
   else if(rowB_in == 0)
      return '6';
   else if(rowC_in == 0)
      return('3');
   else if(rowD_in == 0)  
      return '='; 
}

char scan_col4()                   // Function for finding the row for column 1
{
   rowA_out(1); rowB_out(1); rowC_out(1); rowD_out(1);
   col1_out(0); col2_out(0); col3_out(0); col4_out(0);

   if(rowA_in == 0)
      return 253;
   else if(rowB_in == 0)
      return '*';
   else if(rowC_in == 0)
      return('-');
   else if(rowD_in == 0)  
      return '+'; 
}*/
