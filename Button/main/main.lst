CCS PCM C Compiler, Version 5.015, 5967               10-Sep-23 18:05

               Filename:   D:\cd\PIC_16F887A\Project\PIC16F887_Basic\Button\main\main.lst

               ROM used:   146 words (2%)
                           Largest free fragment is 2048
               RAM used:   5 (1%) at main() level
                           11 (3%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   060
0003:  NOP
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
0004:  MOVF   23,W
0005:  ANDLW  07
0006:  MOVWF  77
0007:  RRF    23,W
0008:  MOVWF  78
0009:  RRF    78,F
000A:  RRF    78,F
000B:  MOVLW  1F
000C:  ANDWF  78,F
000D:  MOVF   78,W
000E:  ADDWF  25,W
000F:  MOVWF  04
0010:  BCF    03.7
0011:  BTFSC  26.0
0012:  BSF    03.7
0013:  CLRF   78
0014:  INCF   78,F
0015:  INCF   77,F
0016:  GOTO   018
0017:  RLF    78,F
0018:  DECFSZ 77,F
0019:  GOTO   017
001A:  MOVF   24,F
001B:  BTFSC  03.2
001C:  GOTO   020
001D:  MOVF   78,W
001E:  IORWF  00,F
001F:  GOTO   023
0020:  COMF   78,F
0021:  MOVF   78,W
0022:  ANDWF  00,F
0023:  RETURN
0024:  MOVF   23,W
0025:  ANDLW  07
0026:  MOVWF  77
0027:  RRF    23,W
0028:  MOVWF  78
0029:  RRF    78,F
002A:  RRF    78,F
002B:  MOVLW  1F
002C:  ANDWF  78,F
002D:  MOVF   78,W
002E:  ADDWF  24,W
002F:  MOVWF  04
0030:  BCF    03.7
0031:  BTFSC  25.0
0032:  BSF    03.7
0033:  MOVF   00,W
0034:  MOVWF  78
0035:  INCF   77,F
0036:  GOTO   038
0037:  RRF    78,F
0038:  DECFSZ 77,F
0039:  GOTO   037
003A:  RETURN
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20M) 
....................  
....................  
....................  
.................... #define led1         PIN_B0 
....................  
.................... #define btn_on       PIN_C0 
.................... #define btn_off      PIN_C1 
.................... #define btn_toggle   PIN_C2 
....................  
....................  
....................  
.................... #define on  1 
.................... #define off 0 
....................  
.................... #define ON_LED output_high(led1) 
.................... #define OFF_LED output_low(led1) 
.................... #define TOGGLE_LED output_toggle(led1) 
....................  
.................... int isPressed(int16 btn) 
.................... { 
....................    if (!input(btn)) { 
003B:  MOVF   21,W
003C:  MOVWF  23
003D:  MOVLW  01
003E:  MOVWF  24
003F:  CLRF   26
0040:  MOVLW  80
0041:  MOVWF  25
0042:  CALL   004
0043:  MOVF   21,W
0044:  MOVWF  23
0045:  CLRF   25
0046:  CLRF   24
0047:  CALL   024
0048:  BTFSC  78.0
0049:  GOTO   05D
....................       while (!input(btn));     // debounce 
004A:  MOVF   21,W
004B:  MOVWF  23
004C:  MOVLW  01
004D:  MOVWF  24
004E:  CLRF   26
004F:  MOVLW  80
0050:  MOVWF  25
0051:  CALL   004
0052:  MOVF   21,W
0053:  MOVWF  23
0054:  CLRF   25
0055:  CLRF   24
0056:  CALL   024
0057:  BTFSS  78.0
0058:  GOTO   04A
....................       return 1; 
0059:  MOVLW  01
005A:  MOVWF  78
005B:  GOTO   05F
....................    }    
005C:  GOTO   05F
....................    else 
....................       return 0; 
005D:  MOVLW  00
005E:  MOVWF  78
005F:  RETURN
.................... } 
....................  
....................  
.................... void main()  
0060:  MOVF   03,W
0061:  ANDLW  1F
0062:  MOVWF  03
0063:  BSF    03.5
0064:  BSF    1F.0
0065:  BSF    1F.1
0066:  BSF    1F.2
0067:  BCF    1F.3
0068:  MOVLW  07
0069:  MOVWF  1C
006A:  BCF    03.7
.................... { 
....................    OFF_LED; 
006B:  BCF    06.0
006C:  BCF    03.5
006D:  BCF    06.0
....................     
....................    while (TRUE)  
....................    { 
....................       if (isPressed(btn_on)) 
006E:  CLRF   22
006F:  MOVLW  38
0070:  MOVWF  21
0071:  CALL   03B
0072:  MOVF   78,F
0073:  BTFSC  03.2
0074:  GOTO   079
....................          ON_LED; 
0075:  BSF    03.5
0076:  BCF    06.0
0077:  BCF    03.5
0078:  BSF    06.0
....................        
....................       if (isPressed(btn_off)) 
0079:  CLRF   22
007A:  MOVLW  39
007B:  MOVWF  21
007C:  CALL   03B
007D:  MOVF   78,F
007E:  BTFSC  03.2
007F:  GOTO   084
....................         OFF_LED; 
0080:  BSF    03.5
0081:  BCF    06.0
0082:  BCF    03.5
0083:  BCF    06.0
....................  
....................       if (isPressed(btn_toggle))     
0084:  CLRF   22
0085:  MOVLW  3A
0086:  MOVWF  21
0087:  CALL   03B
0088:  MOVF   78,F
0089:  BTFSC  03.2
008A:  GOTO   090
....................          TOGGLE_LED; 
008B:  BSF    03.5
008C:  BCF    06.0
008D:  MOVLW  01
008E:  BCF    03.5
008F:  XORWF  06,F
0090:  GOTO   06E
....................    } 
.................... } 
0091:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
